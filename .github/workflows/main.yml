
name: CI

on:
  push:
    branches:
      - develop
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-mock awscli

      - name: Unit testing
        run: |
          python -m pytest tests/ -v

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      
      - name: sam build
        uses: youyo/aws-sam-action/python3.8@master
        with:
          sam_command: build
        env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_DEFAULT_REGION:  eu-west-1

      - name: sam package
        uses: youyo/aws-sam-action/python3.8@master
        with:
          sam_command: package --output-template-file package.yaml --s3-bucket aws-builds-artifacts-jo --s3-prefix serverless-api-input
        env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_DEFAULT_REGION:  eu-west-1

      - name: sam deploy
        uses: youyo/aws-sam-action/python3.8@master
        with:
            sam_command: 'deploy --template-file package.yaml --stack-name serverless-api-input --s3-bucket aws-builds-artifacts-jo --s3-prefix serverless-api-input --capabilities CAPABILITY_IAM --no-fail-on-empty-changeset'
        env:
            AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
            AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            AWS_DEFAULT_REGION: eu-west-1

      - name: Update index.html with api endpoint
        run: |
          API_ENDPOINT=(`aws cloudformation describe-stacks \
                     --stack-name serverless-api-input \
                     --query "Stacks[0].Outputs[?OutputKey=='ApiEndpoint'].OutputValue" \
                     --output text`)

          sed -i "s|REPLACE_API_ENDPOINT_HERE|$API_ENDPOINT|g" website/index.html

      - name: Upload index.html to s3
        run: |
          aws s3 cp --acl public-read website/index.html s3://serverless-api-website-jo-bucket/
